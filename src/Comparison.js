import React, { useState, useEffect } from 'react';
import {prefixdata, middledata, suffixdata} from './dataset2';
import './App.css';

function Comparison() {

  // Random Number Generators
    const aBigRandomNumber = Math.floor(Math.random() * 5160) + 1
    const randomNumberPrefix = Math.floor(Math.random() * 40) + 1
    const randomNumberMiddle = Math.floor(Math.random() * 32) + 1
    const randomNumberSuffix = Math.floor(Math.random() * 57) + 1
    const fiftyPercentChance = Math.floor(Math.random() * 2)

  // Use State
    const [realName, setRealName] = useState();
    const [fakeName, setFakeName] = useState();
    const [textColorCorrect, setTextColorCorrect] = useState();
    const [textColorWrong, setTextColorWrong] = useState();
    const [order, setOrder] = useState(); 

  // API Call
    const makeAPICall = () => (
      fetch("https://rxnav.nlm.nih.gov/REST/allconcepts.json?tty=BN")
      .then((response) => response.json())
      .then((results) => setRealName(results.minConceptGroup.minConcept[aBigRandomNumber].name)) )

  // Use Effect
    useEffect(() => {
      makeAPICall();
      handleComparison();
      randomOrder();
      }, [])

  // Handle Clicks
  const handleComparison = () => {
    setFakeName(prefixdata[randomNumberPrefix] + middledata[randomNumberMiddle] + suffixdata[randomNumberSuffix]);
    makeAPICall(realName);
    setTextColorCorrect('black');
    setTextColorWrong('black');
    setOrder(fiftyPercentChance);
  }

  const handleCorrectGuess = () => {
    setTextColorCorrect('green');
  }

  const handleWrongGuess = () => {
    setTextColorWrong('red');
  }

  // Random Order Funtion
    const randomOrder = () => {

        if (order === 0) { 
            return (
        <div className="game">
        <p className="drug-names" style={{color:textColorCorrect}} onClick={() => {handleCorrectGuess()}}>{realName ? realName : 'Loading...'}</p> 
        <p className="versus">vs.</p>
        <p className="drug-names" style={{color:textColorWrong}} onClick={() => {handleWrongGuess()}}>{fakeName ? fakeName : 'Venpradone'}</p>
        </div>)    
        } 
        
        else {
            return (
        <div className="game">
        <p className="drug-names" style={{color:textColorWrong}} onClick={() => {handleWrongGuess()}}>{fakeName ? fakeName : 'Venpradone'}</p>
        <p className="versus">vs.</p>
             {/* Real Drug */}
        <p className="drug-names" style={{color:textColorCorrect}} onClick={() => {handleCorrectGuess()}}>{realName ? realName : 'Loading...'}</p> 
        </div>
            )

        }
    }




  return (
    <div className="comparison orange-image">
        {/* Instructions */}
      <h3 className="comparison-title">Drug Name Comparison</h3>
      <p className="comparison-text">Let's see how Medipram's names compare to current prescription drug names on the market.</p>
      <h4 className="comparison-text">You decide. One name is a real product and the other is a name generated by Medipram. Try to identify the real product.</h4>

        {randomOrder()}

        <button className="comparison-button" onClick={() => {handleComparison()}}>Generate a Comparison</button>
    </div>
  );
}

export default Comparison;


     
            // <p className="drug-names" style={{color:textColorCorrect}} onClick={() => {handleCorrectGuess()}}>{realName ? realName : 'Loading...'}</p> 

            // <p className="drug-names">vs.</p>
    
        
            // <p className="drug-names" style={{color:textColorWrong}} onClick={() => {handleWrongGuess()}}>{fakeName ? fakeName : 'Venpradone'}</p>